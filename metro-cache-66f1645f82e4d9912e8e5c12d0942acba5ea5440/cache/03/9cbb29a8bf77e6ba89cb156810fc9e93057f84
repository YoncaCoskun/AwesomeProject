__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _class,
      _temp,
      _jsxFileName = "/Users/yoncacoskun/Desktop/ReactNative/AwesomeProject/node_modules/react-native-radio-form/index.js";

  var _propTypes = require(_dependencyMap[2], "prop-types");

  var _propTypes2 = _interopRequireDefault(_propTypes);

  var _reactNative = require(_dependencyMap[3], "react-native");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    RadioForm: {
      displayName: "RadioForm"
    }
  };

  var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/Users/yoncacoskun/Desktop/ReactNative/AwesomeProject/node_modules/react-native-radio-form/index.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _reactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var WINDOW_WIDTH = _reactNative.Dimensions.get('window').width;

  var RadioForm = _wrapComponent("RadioForm")((_temp = _class = function (_Component) {
    _inherits(RadioForm, _Component);

    function RadioForm(props) {
      _classCallCheck(this, RadioForm);

      var _this = _possibleConstructorReturn(this, (RadioForm.__proto__ || Object.getPrototypeOf(RadioForm)).call(this, props));

      _this._onPress = _this._onPress.bind(_this);
      _this.renderRadioCircle = _this.renderRadioCircle.bind(_this);
      _this.renderRadioItem = _this.renderRadioItem.bind(_this);
      _this.state = {
        is_active_index: props.initial
      };
      return _this;
    }

    _createClass(RadioForm, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var _props = this.props,
            itemShowKey = _props.itemShowKey,
            itemRealKey = _props.itemRealKey,
            initial = _props.initial,
            dataSource = _props.dataSource;
        if (typeof initial === 'number') return;
        dataSource.map(function (item, i) {
          if (item[itemShowKey] === initial || item[itemRealKey] === initial) {
            _this2.setState({
              is_active_index: i
            });

            return i;
          }
        });
      }
    }, {
      key: "_onPress",
      value: function _onPress(item, index) {
        this.setState({
          is_active_index: index
        });

        if (this.props.onPress) {
          this.props.onPress(item, index);
        }
      }
    }, {
      key: "renderRadioItem",
      value: function renderRadioItem(item, i) {
        var _this3 = this;

        var itemShowKey = this.props.itemShowKey;
        var isSelected = false;

        if (this.state.is_active_index === i) {
          isSelected = true;
        }

        return _react3.default.createElement(
          _reactNative.TouchableWithoutFeedback,
          {
            key: i,
            onPress: function onPress() {
              return _this3._onPress(item, i);
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 82
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            {
              style: {
                padding: 2.5,
                flexDirection: this.props.labelHorizontal ? 'row' : 'column',
                justifyContent: 'center',
                alignItems: 'center'
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 86
              }
            },
            this.renderRadioCircle(isSelected),
            _react3.default.createElement(
              _reactNative.View,
              {
                style: {
                  marginLeft: 3
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 91
                }
              },
              _react3.default.createElement(
                _reactNative.Text,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 94
                  }
                },
                '' + item[itemShowKey]
              )
            )
          )
        );
      }
    }, {
      key: "renderRadioCircle",
      value: function renderRadioCircle(isSelected) {
        var outerSize = this.props.circleSize > 11 ? this.props.circleSize : 11;
        var innerSize = this.props.circleSize - 7;
        return _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              width: outerSize,
              height: outerSize,
              margin: 5,
              justifyContent: 'center',
              alignItems: 'center',
              borderRadius: outerSize / 2,
              borderWidth: 2,
              borderColor: this.props.outerColor
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 105
            }
          },
          _react3.default.createElement(_reactNative.View, {
            style: {
              width: innerSize,
              height: innerSize,
              borderRadius: innerSize / 2,
              backgroundColor: isSelected ? this.props.innerColor : 'transparent'
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 109
            }
          })
        );
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react3.default.createElement(
          _reactNative.ScrollView,
          _extends({}, this.props, {
            contentContainerStyle: {
              alignItems: 'flex-start',
              flexDirection: this.props.formHorizontal ? 'row' : 'column',
              flexWrap: 'wrap',
              padding: 5
            },
            style: [{
              width: WINDOW_WIDTH
            }, this.props.style],
            __source: {
              fileName: _jsxFileName,
              lineNumber: 119
            }
          }),
          this.props.dataSource.map(function (item, i) {
            return _this4.renderRadioItem(item, i);
          })
        );
      }
    }]);

    return RadioForm;
  }(_react2.Component), _class.propTypes = {
    dataSource: _propTypes2.default.array,
    initial: _propTypes2.default.any,
    formHorizontal: _propTypes2.default.bool,
    labelHorizontal: _propTypes2.default.bool,
    itemShowKey: _propTypes2.default.string,
    itemRealKey: _propTypes2.default.string,
    circleSize: _propTypes2.default.number,
    outerColor: _propTypes2.default.string,
    innerColor: _propTypes2.default.string,
    onPress: _propTypes2.default.func
  }, _class.defaultProps = {
    dataSource: [],
    initial: 0,
    formHorizontal: false,
    labelHorizontal: true,
    itemShowKey: 'label',
    itemRealKey: 'value',
    circleSize: 20,
    outerColor: '#2f86d5',
    innerColor: '#2f86d5'
  }, _temp));

  exports.default = RadioForm;
});