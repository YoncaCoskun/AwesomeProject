__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/Users/yoncacoskun/Desktop/ReactNative/AwesomeProject/src/components/QuesScreen.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _QuestionDetail = require(_dependencyMap[3], "./QuestionDetail");

  var _QuestionDetail2 = _interopRequireDefault(_QuestionDetail);

  var _reactNativeAnimatedHeaderScrollView = require(_dependencyMap[4], "react-native-animated-header-scroll-view");

  var _reactNativeAnimatedHeaderScrollView2 = _interopRequireDefault(_reactNativeAnimatedHeaderScrollView);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    QuesScreen: {
      displayName: "QuesScreen"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/Users/yoncacoskun/Desktop/ReactNative/AwesomeProject/src/components/QuesScreen.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var xOffset = new _reactNative.Animated.Value(0);

  var SCREEN_WIDTH = _reactNative.Dimensions.get("window").width;

  var QuesScreen = _wrapComponent("QuesScreen")(function (_Component) {
    _inherits(QuesScreen, _Component);

    function QuesScreen() {
      var _ref;

      var _temp, _this, _ret;

      _classCallCheck(this, QuesScreen);

      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = QuesScreen.__proto__ || Object.getPrototypeOf(QuesScreen)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
        questions: [{
          QCount: "Question 1/10",
          Ques: "Which number should come next in the pattern?",
          aOption: "23",
          bOption: "27",
          cOption: "25",
          dOption: "30",
          eOption: "22",
          image: {
            uri: require(_dependencyMap[5], './ques.jpg')
          }
        }, {
          QCount: "Question 2/10",
          Ques: "Which one of the five choices makes the best comparison?",
          aOption: "25641",
          bOption: "26451",
          cOption: "12654",
          dOption: "51462",
          eOption: "15264",
          image: {
            uri: require(_dependencyMap[5], './ques.jpg')
          }
        }, {
          QCount: "Question 3/10",
          Ques: "1, 15, 3, 21, 6, 28, ? ",
          aOption: "11",
          bOption: "10",
          cOption: "15",
          dOption: "18",
          eOption: "9",
          image: {
            uri: require(_dependencyMap[5], './ques.jpg')
          }
        }]
      }, _temp), _possibleConstructorReturn(_this, _ret);
    }

    _createClass(QuesScreen, [{
      key: "renderQuestions",
      value: function renderQuestions() {
        return this.state.questions.map(function (question) {
          return _react3.default.createElement(_QuestionDetail2.default, {
            key: question.Ques,
            question: question,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 50
            }
          });
        });
      }
    }, {
      key: "render",
      value: function render() {
        return _react3.default.createElement(
          _reactNative.Animated.ScrollView,
          {
            scrollEventThrottle: 16,
            onScroll: _reactNative.Animated.event([{
              nativeEvent: {
                contentOffset: {
                  x: xOffset
                }
              }
            }], {
              useNativeDriver: true
            }),
            horizontal: true,
            pagingEnabled: true,
            style: styles.scrollView,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 57
            }
          },
          this.renderQuestions()
        );
      }
    }]);

    return QuesScreen;
  }(_react2.Component));

  QuesScreen.navigationOptions = {
    title: ""
  };
  var styles = {
    scrollView: {
      width: SCREEN_WIDTH,
      padding: 5,
      marginRight: 5,
      marginBottom: 10,
      paddingBottom: 10
    }
  };
  exports.default = QuesScreen;
});